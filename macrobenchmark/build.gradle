import com.android.build.api.dsl.ManagedVirtualDevice

plugins {
    id 'com.android.test'
    id 'org.jetbrains.kotlin.android'
}

android {
    namespace 'antuere.macrobenchmark'
    compileSdk 33

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    testOptions {
        managedDevices {
            devices {
               pixel2Api31(ManagedVirtualDevice){
                   device = "Pixel 2"
                   apiLevel = 31
                   systemImageSource = "aosp"
               }
            }
        }
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    defaultConfig {
        testInstrumentationRunnerArguments["androidx.benchmark.suppressErrors"] = "EMULATOR"
        minSdk 23
        targetSdk 33
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        // This benchmark buildType is used for benchmarking, and should function like your
        // release build (for example, with minification on). It's signed with a debug key
        // for easy local/CI testing.
        benchmark {
            debuggable = true
            signingConfig = debug.signingConfig
            matchingFallbacks = ["release"]
            proguardFiles("benchmark-rules.pro")
        }
    }

    targetProjectPath = ":app"
    experimentalProperties["android.experimental.self-instrumenting"] = true
}

dependencies {
    implementation "androidx.test.ext:junit:$version_junit_ext"
    implementation "androidx.test.espresso:espresso-core:$version_espresso_core"
    implementation "androidx.test.uiautomator:uiautomator:$version_uiautomator"

    // Macrobenchmark
    implementation "androidx.benchmark:benchmark-macro-junit4:$version_macro_benchmark"
}

androidComponents {
    beforeVariants(selector().all()) {
        enabled = buildType == "benchmark"
    }
}